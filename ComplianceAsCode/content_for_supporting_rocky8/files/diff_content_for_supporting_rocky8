diff -Nru contents.org/CMakeLists.txt contents/CMakeLists.txt
--- contents.org/CMakeLists.txt	2020-12-25 11:27:15.846891070 +0900
+++ contents/CMakeLists.txt	2020-12-25 11:25:36.850340389 +0900
@@ -87,6 +87,7 @@
 option(SSG_PRODUCT_VSEL "If enabled, the McAfee VSEL SCAP content will be built" ${SSG_PRODUCT_DEFAULT})
 option(SSG_PRODUCT_WRLINUX8 "If enabled, the WRLinux8 SCAP content will be built" ${SSG_PRODUCT_DEFAULT})
 option(SSG_PRODUCT_WRLINUX1019 "If enabled, the WRLinux1019 SCAP content will be built" ${SSG_PRODUCT_DEFAULT})
+option(SSG_PRODUCT_ROCKY8 "If enabled, the ROCKY8 SCAP content will be built" ${SSG_PRODUCT_DEFAULT})
 
 option(SSG_CENTOS_DERIVATIVES_ENABLED "If enabled, CentOS derivative content will be built from the RHEL content" TRUE)
 option(SSG_SCIENTIFIC_LINUX_DERIVATIVES_ENABLED "If enabled, Scientific Linux derivative content will be built from the RHEL content" TRUE)
@@ -267,6 +268,8 @@
 message(STATUS "McAfee VSEL: ${SSG_PRODUCT_VSEL}")
 message(STATUS "WRLinux 8: ${SSG_PRODUCT_WRLINUX8}")
 message(STATUS "WRLinux 1019: ${SSG_PRODUCT_WRLINUX1019}")
+message(STATUS "ROCKY 8: ${SSG_PRODUCT_ROCKY8}")
+
 
 
 
@@ -386,6 +389,10 @@
 if (SSG_PRODUCT_WRLINUX1019)
     add_subdirectory("wrlinux1019")
 endif()
+if (SSG_PRODUCT_ROCKY8)
+    add_subdirectory("rocky8")
+endif()
+
 
 # ZIP only contains source datastreams and kickstarts, people who
 # want sources to build from should get the tarball instead.
diff -Nru contents.org/build_product contents/build_product
--- contents.org/build_product	2020-12-25 11:27:25.418946300 +0900
+++ contents/build_product	2020-12-25 11:25:57.106449843 +0900
@@ -294,6 +294,7 @@
 	VSEL
 	WRLINUX8
 	WRLINUX1019
+	ROCKY8
 )
 
 DEFAULT_OVAL_MAJOR_VERSION=5
diff -Nru contents.org/ssg/constants.py contents/ssg/constants.py
--- contents.org/ssg/constants.py	2020-12-25 11:27:43.667052479 +0900
+++ contents/ssg/constants.py	2020-12-25 11:26:29.062625992 +0900
@@ -23,7 +23,8 @@
     'sle12', 'sle15',
     'ubuntu1604', 'ubuntu1804', 'ubuntu2004',
     'vsel',
-    'wrlinux8', 'wrlinux1019'
+    'wrlinux8', 'wrlinux1019',
+    'rocky8'
 ]
 
 JINJA_MACROS_BASE_DEFINITIONS = os.path.join(os.path.dirname(os.path.dirname(
@@ -167,6 +168,7 @@
     "Ubuntu 20.04": "ubuntu2004",
     "WRLinux 8": "wrlinux8",
     "WRLinux 1019": "wrlinux1019",
+    "Rocky Linux 8": "rocky8",
 }
 
 
@@ -181,7 +183,7 @@
 }
 
 MULTI_PLATFORM_LIST = ["rhel", "fedora", "rhosp", "rhv", "debian", "ubuntu",
-                       "wrlinux", "opensuse", "sle", "ol", "ocp", "rhcos", "example"]
+                       "wrlinux", "opensuse", "sle", "ol", "ocp", "rhcos", "rocky", "example"]
 
 MULTI_PLATFORM_MAPPING = {
     "multi_platform_debian": ["debian9", "debian10"],
@@ -197,6 +199,7 @@
     "multi_platform_sle": ["sle12", "sle15"],
     "multi_platform_ubuntu": ["ubuntu1604", "ubuntu1804", "ubuntu2004"],
     "multi_platform_wrlinux": ["wrlinux8", "wrlinux1019"],
+    "multi_platform_rocky": ["rocky8"],
 }
 
 RHEL_CENTOS_CPE_MAPPING = {
@@ -362,6 +365,7 @@
     'ol': 'Oracle Linux',
     'ocp': 'Red Hat OpenShift Container Platform',
     'rhcos': 'Red Hat Enterprise Linux CoreOS',
+    'rocky': 'Rocky Linux',
 }
 
 
